// GENERATED CODE -- DO NOT EDIT!

// package: api.v1
// file: api/trading.proto

import * as api_trading_pb from "../api/trading_pb";
import * as grpc from "grpc";

interface ITradingServiceService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
  prepareSubmitOrder: grpc.MethodDefinition<api_trading_pb.PrepareSubmitOrderRequest, api_trading_pb.PrepareSubmitOrderResponse>;
  prepareCancelOrder: grpc.MethodDefinition<api_trading_pb.PrepareCancelOrderRequest, api_trading_pb.PrepareCancelOrderResponse>;
  prepareAmendOrder: grpc.MethodDefinition<api_trading_pb.PrepareAmendOrderRequest, api_trading_pb.PrepareAmendOrderResponse>;
  prepareWithdraw: grpc.MethodDefinition<api_trading_pb.PrepareWithdrawRequest, api_trading_pb.PrepareWithdrawResponse>;
  submitTransaction: grpc.MethodDefinition<api_trading_pb.SubmitTransactionRequest, api_trading_pb.SubmitTransactionResponse>;
  prepareProposalSubmission: grpc.MethodDefinition<api_trading_pb.PrepareProposalSubmissionRequest, api_trading_pb.PrepareProposalSubmissionResponse>;
  prepareVoteSubmission: grpc.MethodDefinition<api_trading_pb.PrepareVoteSubmissionRequest, api_trading_pb.PrepareVoteSubmissionResponse>;
  propagateChainEvent: grpc.MethodDefinition<api_trading_pb.PropagateChainEventRequest, api_trading_pb.PropagateChainEventResponse>;
  prepareLiquidityProvision: grpc.MethodDefinition<api_trading_pb.PrepareLiquidityProvisionRequest, api_trading_pb.PrepareLiquidityProvisionResponse>;
}

export const TradingServiceService: ITradingServiceService;

export interface ITradingServiceServer extends grpc.UntypedServiceImplementation {
  prepareSubmitOrder: grpc.handleUnaryCall<api_trading_pb.PrepareSubmitOrderRequest, api_trading_pb.PrepareSubmitOrderResponse>;
  prepareCancelOrder: grpc.handleUnaryCall<api_trading_pb.PrepareCancelOrderRequest, api_trading_pb.PrepareCancelOrderResponse>;
  prepareAmendOrder: grpc.handleUnaryCall<api_trading_pb.PrepareAmendOrderRequest, api_trading_pb.PrepareAmendOrderResponse>;
  prepareWithdraw: grpc.handleUnaryCall<api_trading_pb.PrepareWithdrawRequest, api_trading_pb.PrepareWithdrawResponse>;
  submitTransaction: grpc.handleUnaryCall<api_trading_pb.SubmitTransactionRequest, api_trading_pb.SubmitTransactionResponse>;
  prepareProposalSubmission: grpc.handleUnaryCall<api_trading_pb.PrepareProposalSubmissionRequest, api_trading_pb.PrepareProposalSubmissionResponse>;
  prepareVoteSubmission: grpc.handleUnaryCall<api_trading_pb.PrepareVoteSubmissionRequest, api_trading_pb.PrepareVoteSubmissionResponse>;
  propagateChainEvent: grpc.handleUnaryCall<api_trading_pb.PropagateChainEventRequest, api_trading_pb.PropagateChainEventResponse>;
  prepareLiquidityProvision: grpc.handleUnaryCall<api_trading_pb.PrepareLiquidityProvisionRequest, api_trading_pb.PrepareLiquidityProvisionResponse>;
}

export class TradingServiceClient extends grpc.Client {
  constructor(address: string, credentials: grpc.ChannelCredentials, options?: object);
  prepareSubmitOrder(argument: api_trading_pb.PrepareSubmitOrderRequest, callback: grpc.requestCallback<api_trading_pb.PrepareSubmitOrderResponse>): grpc.ClientUnaryCall;
  prepareSubmitOrder(argument: api_trading_pb.PrepareSubmitOrderRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareSubmitOrderResponse>): grpc.ClientUnaryCall;
  prepareSubmitOrder(argument: api_trading_pb.PrepareSubmitOrderRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareSubmitOrderResponse>): grpc.ClientUnaryCall;
  prepareCancelOrder(argument: api_trading_pb.PrepareCancelOrderRequest, callback: grpc.requestCallback<api_trading_pb.PrepareCancelOrderResponse>): grpc.ClientUnaryCall;
  prepareCancelOrder(argument: api_trading_pb.PrepareCancelOrderRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareCancelOrderResponse>): grpc.ClientUnaryCall;
  prepareCancelOrder(argument: api_trading_pb.PrepareCancelOrderRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareCancelOrderResponse>): grpc.ClientUnaryCall;
  prepareAmendOrder(argument: api_trading_pb.PrepareAmendOrderRequest, callback: grpc.requestCallback<api_trading_pb.PrepareAmendOrderResponse>): grpc.ClientUnaryCall;
  prepareAmendOrder(argument: api_trading_pb.PrepareAmendOrderRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareAmendOrderResponse>): grpc.ClientUnaryCall;
  prepareAmendOrder(argument: api_trading_pb.PrepareAmendOrderRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareAmendOrderResponse>): grpc.ClientUnaryCall;
  prepareWithdraw(argument: api_trading_pb.PrepareWithdrawRequest, callback: grpc.requestCallback<api_trading_pb.PrepareWithdrawResponse>): grpc.ClientUnaryCall;
  prepareWithdraw(argument: api_trading_pb.PrepareWithdrawRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareWithdrawResponse>): grpc.ClientUnaryCall;
  prepareWithdraw(argument: api_trading_pb.PrepareWithdrawRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareWithdrawResponse>): grpc.ClientUnaryCall;
  submitTransaction(argument: api_trading_pb.SubmitTransactionRequest, callback: grpc.requestCallback<api_trading_pb.SubmitTransactionResponse>): grpc.ClientUnaryCall;
  submitTransaction(argument: api_trading_pb.SubmitTransactionRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.SubmitTransactionResponse>): grpc.ClientUnaryCall;
  submitTransaction(argument: api_trading_pb.SubmitTransactionRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.SubmitTransactionResponse>): grpc.ClientUnaryCall;
  prepareProposalSubmission(argument: api_trading_pb.PrepareProposalSubmissionRequest, callback: grpc.requestCallback<api_trading_pb.PrepareProposalSubmissionResponse>): grpc.ClientUnaryCall;
  prepareProposalSubmission(argument: api_trading_pb.PrepareProposalSubmissionRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareProposalSubmissionResponse>): grpc.ClientUnaryCall;
  prepareProposalSubmission(argument: api_trading_pb.PrepareProposalSubmissionRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareProposalSubmissionResponse>): grpc.ClientUnaryCall;
  prepareVoteSubmission(argument: api_trading_pb.PrepareVoteSubmissionRequest, callback: grpc.requestCallback<api_trading_pb.PrepareVoteSubmissionResponse>): grpc.ClientUnaryCall;
  prepareVoteSubmission(argument: api_trading_pb.PrepareVoteSubmissionRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareVoteSubmissionResponse>): grpc.ClientUnaryCall;
  prepareVoteSubmission(argument: api_trading_pb.PrepareVoteSubmissionRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareVoteSubmissionResponse>): grpc.ClientUnaryCall;
  propagateChainEvent(argument: api_trading_pb.PropagateChainEventRequest, callback: grpc.requestCallback<api_trading_pb.PropagateChainEventResponse>): grpc.ClientUnaryCall;
  propagateChainEvent(argument: api_trading_pb.PropagateChainEventRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PropagateChainEventResponse>): grpc.ClientUnaryCall;
  propagateChainEvent(argument: api_trading_pb.PropagateChainEventRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PropagateChainEventResponse>): grpc.ClientUnaryCall;
  prepareLiquidityProvision(argument: api_trading_pb.PrepareLiquidityProvisionRequest, callback: grpc.requestCallback<api_trading_pb.PrepareLiquidityProvisionResponse>): grpc.ClientUnaryCall;
  prepareLiquidityProvision(argument: api_trading_pb.PrepareLiquidityProvisionRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareLiquidityProvisionResponse>): grpc.ClientUnaryCall;
  prepareLiquidityProvision(argument: api_trading_pb.PrepareLiquidityProvisionRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PrepareLiquidityProvisionResponse>): grpc.ClientUnaryCall;
}

interface ITradingDataServiceService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
  marketAccounts: grpc.MethodDefinition<api_trading_pb.MarketAccountsRequest, api_trading_pb.MarketAccountsResponse>;
  partyAccounts: grpc.MethodDefinition<api_trading_pb.PartyAccountsRequest, api_trading_pb.PartyAccountsResponse>;
  feeInfrastructureAccounts: grpc.MethodDefinition<api_trading_pb.FeeInfrastructureAccountsRequest, api_trading_pb.FeeInfrastructureAccountsResponse>;
  candles: grpc.MethodDefinition<api_trading_pb.CandlesRequest, api_trading_pb.CandlesResponse>;
  marketDataByID: grpc.MethodDefinition<api_trading_pb.MarketDataByIDRequest, api_trading_pb.MarketDataByIDResponse>;
  marketsData: grpc.MethodDefinition<api_trading_pb.MarketsDataRequest, api_trading_pb.MarketsDataResponse>;
  marketByID: grpc.MethodDefinition<api_trading_pb.MarketByIDRequest, api_trading_pb.MarketByIDResponse>;
  marketDepth: grpc.MethodDefinition<api_trading_pb.MarketDepthRequest, api_trading_pb.MarketDepthResponse>;
  markets: grpc.MethodDefinition<api_trading_pb.MarketsRequest, api_trading_pb.MarketsResponse>;
  orderByMarketAndID: grpc.MethodDefinition<api_trading_pb.OrderByMarketAndIDRequest, api_trading_pb.OrderByMarketAndIDResponse>;
  orderByReference: grpc.MethodDefinition<api_trading_pb.OrderByReferenceRequest, api_trading_pb.OrderByReferenceResponse>;
  ordersByMarket: grpc.MethodDefinition<api_trading_pb.OrdersByMarketRequest, api_trading_pb.OrdersByMarketResponse>;
  ordersByParty: grpc.MethodDefinition<api_trading_pb.OrdersByPartyRequest, api_trading_pb.OrdersByPartyResponse>;
  orderByID: grpc.MethodDefinition<api_trading_pb.OrderByIDRequest, api_trading_pb.OrderByIDResponse>;
  orderVersionsByID: grpc.MethodDefinition<api_trading_pb.OrderVersionsByIDRequest, api_trading_pb.OrderVersionsByIDResponse>;
  marginLevels: grpc.MethodDefinition<api_trading_pb.MarginLevelsRequest, api_trading_pb.MarginLevelsResponse>;
  parties: grpc.MethodDefinition<api_trading_pb.PartiesRequest, api_trading_pb.PartiesResponse>;
  partyByID: grpc.MethodDefinition<api_trading_pb.PartyByIDRequest, api_trading_pb.PartyByIDResponse>;
  positionsByParty: grpc.MethodDefinition<api_trading_pb.PositionsByPartyRequest, api_trading_pb.PositionsByPartyResponse>;
  lastTrade: grpc.MethodDefinition<api_trading_pb.LastTradeRequest, api_trading_pb.LastTradeResponse>;
  tradesByMarket: grpc.MethodDefinition<api_trading_pb.TradesByMarketRequest, api_trading_pb.TradesByMarketResponse>;
  tradesByOrder: grpc.MethodDefinition<api_trading_pb.TradesByOrderRequest, api_trading_pb.TradesByOrderResponse>;
  tradesByParty: grpc.MethodDefinition<api_trading_pb.TradesByPartyRequest, api_trading_pb.TradesByPartyResponse>;
  getProposals: grpc.MethodDefinition<api_trading_pb.GetProposalsRequest, api_trading_pb.GetProposalsResponse>;
  getProposalsByParty: grpc.MethodDefinition<api_trading_pb.GetProposalsByPartyRequest, api_trading_pb.GetProposalsByPartyResponse>;
  getVotesByParty: grpc.MethodDefinition<api_trading_pb.GetVotesByPartyRequest, api_trading_pb.GetVotesByPartyResponse>;
  getNewMarketProposals: grpc.MethodDefinition<api_trading_pb.GetNewMarketProposalsRequest, api_trading_pb.GetNewMarketProposalsResponse>;
  getUpdateMarketProposals: grpc.MethodDefinition<api_trading_pb.GetUpdateMarketProposalsRequest, api_trading_pb.GetUpdateMarketProposalsResponse>;
  getNetworkParametersProposals: grpc.MethodDefinition<api_trading_pb.GetNetworkParametersProposalsRequest, api_trading_pb.GetNetworkParametersProposalsResponse>;
  getNewAssetProposals: grpc.MethodDefinition<api_trading_pb.GetNewAssetProposalsRequest, api_trading_pb.GetNewAssetProposalsResponse>;
  getProposalByID: grpc.MethodDefinition<api_trading_pb.GetProposalByIDRequest, api_trading_pb.GetProposalByIDResponse>;
  getProposalByReference: grpc.MethodDefinition<api_trading_pb.GetProposalByReferenceRequest, api_trading_pb.GetProposalByReferenceResponse>;
  observeGovernance: grpc.MethodDefinition<api_trading_pb.ObserveGovernanceRequest, api_trading_pb.ObserveGovernanceResponse>;
  observePartyProposals: grpc.MethodDefinition<api_trading_pb.ObservePartyProposalsRequest, api_trading_pb.ObservePartyProposalsResponse>;
  observePartyVotes: grpc.MethodDefinition<api_trading_pb.ObservePartyVotesRequest, api_trading_pb.ObservePartyVotesResponse>;
  observeProposalVotes: grpc.MethodDefinition<api_trading_pb.ObserveProposalVotesRequest, api_trading_pb.ObserveProposalVotesResponse>;
  observeEventBus: grpc.MethodDefinition<api_trading_pb.ObserveEventBusRequest, api_trading_pb.ObserveEventBusResponse>;
  statistics: grpc.MethodDefinition<api_trading_pb.StatisticsRequest, api_trading_pb.StatisticsResponse>;
  getVegaTime: grpc.MethodDefinition<api_trading_pb.GetVegaTimeRequest, api_trading_pb.GetVegaTimeResponse>;
  accountsSubscribe: grpc.MethodDefinition<api_trading_pb.AccountsSubscribeRequest, api_trading_pb.AccountsSubscribeResponse>;
  candlesSubscribe: grpc.MethodDefinition<api_trading_pb.CandlesSubscribeRequest, api_trading_pb.CandlesSubscribeResponse>;
  marginLevelsSubscribe: grpc.MethodDefinition<api_trading_pb.MarginLevelsSubscribeRequest, api_trading_pb.MarginLevelsSubscribeResponse>;
  marketDepthSubscribe: grpc.MethodDefinition<api_trading_pb.MarketDepthSubscribeRequest, api_trading_pb.MarketDepthSubscribeResponse>;
  marketDepthUpdatesSubscribe: grpc.MethodDefinition<api_trading_pb.MarketDepthUpdatesSubscribeRequest, api_trading_pb.MarketDepthUpdatesSubscribeResponse>;
  marketsDataSubscribe: grpc.MethodDefinition<api_trading_pb.MarketsDataSubscribeRequest, api_trading_pb.MarketsDataSubscribeResponse>;
  ordersSubscribe: grpc.MethodDefinition<api_trading_pb.OrdersSubscribeRequest, api_trading_pb.OrdersSubscribeResponse>;
  positionsSubscribe: grpc.MethodDefinition<api_trading_pb.PositionsSubscribeRequest, api_trading_pb.PositionsSubscribeResponse>;
  tradesSubscribe: grpc.MethodDefinition<api_trading_pb.TradesSubscribeRequest, api_trading_pb.TradesSubscribeResponse>;
  transferResponsesSubscribe: grpc.MethodDefinition<api_trading_pb.TransferResponsesSubscribeRequest, api_trading_pb.TransferResponsesSubscribeResponse>;
  getNodeSignaturesAggregate: grpc.MethodDefinition<api_trading_pb.GetNodeSignaturesAggregateRequest, api_trading_pb.GetNodeSignaturesAggregateResponse>;
  assetByID: grpc.MethodDefinition<api_trading_pb.AssetByIDRequest, api_trading_pb.AssetByIDResponse>;
  assets: grpc.MethodDefinition<api_trading_pb.AssetsRequest, api_trading_pb.AssetsResponse>;
  estimateFee: grpc.MethodDefinition<api_trading_pb.EstimateFeeRequest, api_trading_pb.EstimateFeeResponse>;
  estimateMargin: grpc.MethodDefinition<api_trading_pb.EstimateMarginRequest, api_trading_pb.EstimateMarginResponse>;
  eRC20WithdrawalApproval: grpc.MethodDefinition<api_trading_pb.ERC20WithdrawalApprovalRequest, api_trading_pb.ERC20WithdrawalApprovalResponse>;
  withdrawal: grpc.MethodDefinition<api_trading_pb.WithdrawalRequest, api_trading_pb.WithdrawalResponse>;
  withdrawals: grpc.MethodDefinition<api_trading_pb.WithdrawalsRequest, api_trading_pb.WithdrawalsResponse>;
  deposit: grpc.MethodDefinition<api_trading_pb.DepositRequest, api_trading_pb.DepositResponse>;
  deposits: grpc.MethodDefinition<api_trading_pb.DepositsRequest, api_trading_pb.DepositsResponse>;
  networkParameters: grpc.MethodDefinition<api_trading_pb.NetworkParametersRequest, api_trading_pb.NetworkParametersResponse>;
  liquidityProvisions: grpc.MethodDefinition<api_trading_pb.LiquidityProvisionsRequest, api_trading_pb.LiquidityProvisionsResponse>;
  oracleSpec: grpc.MethodDefinition<api_trading_pb.OracleSpecRequest, api_trading_pb.OracleSpecResponse>;
  oracleSpecs: grpc.MethodDefinition<api_trading_pb.OracleSpecsRequest, api_trading_pb.OracleSpecsResponse>;
  oracleDataBySpec: grpc.MethodDefinition<api_trading_pb.OracleDataBySpecRequest, api_trading_pb.OracleDataBySpecResponse>;
}

export const TradingDataServiceService: ITradingDataServiceService;

export interface ITradingDataServiceServer extends grpc.UntypedServiceImplementation {
  marketAccounts: grpc.handleUnaryCall<api_trading_pb.MarketAccountsRequest, api_trading_pb.MarketAccountsResponse>;
  partyAccounts: grpc.handleUnaryCall<api_trading_pb.PartyAccountsRequest, api_trading_pb.PartyAccountsResponse>;
  feeInfrastructureAccounts: grpc.handleUnaryCall<api_trading_pb.FeeInfrastructureAccountsRequest, api_trading_pb.FeeInfrastructureAccountsResponse>;
  candles: grpc.handleUnaryCall<api_trading_pb.CandlesRequest, api_trading_pb.CandlesResponse>;
  marketDataByID: grpc.handleUnaryCall<api_trading_pb.MarketDataByIDRequest, api_trading_pb.MarketDataByIDResponse>;
  marketsData: grpc.handleUnaryCall<api_trading_pb.MarketsDataRequest, api_trading_pb.MarketsDataResponse>;
  marketByID: grpc.handleUnaryCall<api_trading_pb.MarketByIDRequest, api_trading_pb.MarketByIDResponse>;
  marketDepth: grpc.handleUnaryCall<api_trading_pb.MarketDepthRequest, api_trading_pb.MarketDepthResponse>;
  markets: grpc.handleUnaryCall<api_trading_pb.MarketsRequest, api_trading_pb.MarketsResponse>;
  orderByMarketAndID: grpc.handleUnaryCall<api_trading_pb.OrderByMarketAndIDRequest, api_trading_pb.OrderByMarketAndIDResponse>;
  orderByReference: grpc.handleUnaryCall<api_trading_pb.OrderByReferenceRequest, api_trading_pb.OrderByReferenceResponse>;
  ordersByMarket: grpc.handleUnaryCall<api_trading_pb.OrdersByMarketRequest, api_trading_pb.OrdersByMarketResponse>;
  ordersByParty: grpc.handleUnaryCall<api_trading_pb.OrdersByPartyRequest, api_trading_pb.OrdersByPartyResponse>;
  orderByID: grpc.handleUnaryCall<api_trading_pb.OrderByIDRequest, api_trading_pb.OrderByIDResponse>;
  orderVersionsByID: grpc.handleUnaryCall<api_trading_pb.OrderVersionsByIDRequest, api_trading_pb.OrderVersionsByIDResponse>;
  marginLevels: grpc.handleUnaryCall<api_trading_pb.MarginLevelsRequest, api_trading_pb.MarginLevelsResponse>;
  parties: grpc.handleUnaryCall<api_trading_pb.PartiesRequest, api_trading_pb.PartiesResponse>;
  partyByID: grpc.handleUnaryCall<api_trading_pb.PartyByIDRequest, api_trading_pb.PartyByIDResponse>;
  positionsByParty: grpc.handleUnaryCall<api_trading_pb.PositionsByPartyRequest, api_trading_pb.PositionsByPartyResponse>;
  lastTrade: grpc.handleUnaryCall<api_trading_pb.LastTradeRequest, api_trading_pb.LastTradeResponse>;
  tradesByMarket: grpc.handleUnaryCall<api_trading_pb.TradesByMarketRequest, api_trading_pb.TradesByMarketResponse>;
  tradesByOrder: grpc.handleUnaryCall<api_trading_pb.TradesByOrderRequest, api_trading_pb.TradesByOrderResponse>;
  tradesByParty: grpc.handleUnaryCall<api_trading_pb.TradesByPartyRequest, api_trading_pb.TradesByPartyResponse>;
  getProposals: grpc.handleUnaryCall<api_trading_pb.GetProposalsRequest, api_trading_pb.GetProposalsResponse>;
  getProposalsByParty: grpc.handleUnaryCall<api_trading_pb.GetProposalsByPartyRequest, api_trading_pb.GetProposalsByPartyResponse>;
  getVotesByParty: grpc.handleUnaryCall<api_trading_pb.GetVotesByPartyRequest, api_trading_pb.GetVotesByPartyResponse>;
  getNewMarketProposals: grpc.handleUnaryCall<api_trading_pb.GetNewMarketProposalsRequest, api_trading_pb.GetNewMarketProposalsResponse>;
  getUpdateMarketProposals: grpc.handleUnaryCall<api_trading_pb.GetUpdateMarketProposalsRequest, api_trading_pb.GetUpdateMarketProposalsResponse>;
  getNetworkParametersProposals: grpc.handleUnaryCall<api_trading_pb.GetNetworkParametersProposalsRequest, api_trading_pb.GetNetworkParametersProposalsResponse>;
  getNewAssetProposals: grpc.handleUnaryCall<api_trading_pb.GetNewAssetProposalsRequest, api_trading_pb.GetNewAssetProposalsResponse>;
  getProposalByID: grpc.handleUnaryCall<api_trading_pb.GetProposalByIDRequest, api_trading_pb.GetProposalByIDResponse>;
  getProposalByReference: grpc.handleUnaryCall<api_trading_pb.GetProposalByReferenceRequest, api_trading_pb.GetProposalByReferenceResponse>;
  observeGovernance: grpc.handleServerStreamingCall<api_trading_pb.ObserveGovernanceRequest, api_trading_pb.ObserveGovernanceResponse>;
  observePartyProposals: grpc.handleServerStreamingCall<api_trading_pb.ObservePartyProposalsRequest, api_trading_pb.ObservePartyProposalsResponse>;
  observePartyVotes: grpc.handleServerStreamingCall<api_trading_pb.ObservePartyVotesRequest, api_trading_pb.ObservePartyVotesResponse>;
  observeProposalVotes: grpc.handleServerStreamingCall<api_trading_pb.ObserveProposalVotesRequest, api_trading_pb.ObserveProposalVotesResponse>;
  observeEventBus: grpc.handleBidiStreamingCall<api_trading_pb.ObserveEventBusRequest, api_trading_pb.ObserveEventBusResponse>;
  statistics: grpc.handleUnaryCall<api_trading_pb.StatisticsRequest, api_trading_pb.StatisticsResponse>;
  getVegaTime: grpc.handleUnaryCall<api_trading_pb.GetVegaTimeRequest, api_trading_pb.GetVegaTimeResponse>;
  accountsSubscribe: grpc.handleServerStreamingCall<api_trading_pb.AccountsSubscribeRequest, api_trading_pb.AccountsSubscribeResponse>;
  candlesSubscribe: grpc.handleServerStreamingCall<api_trading_pb.CandlesSubscribeRequest, api_trading_pb.CandlesSubscribeResponse>;
  marginLevelsSubscribe: grpc.handleServerStreamingCall<api_trading_pb.MarginLevelsSubscribeRequest, api_trading_pb.MarginLevelsSubscribeResponse>;
  marketDepthSubscribe: grpc.handleServerStreamingCall<api_trading_pb.MarketDepthSubscribeRequest, api_trading_pb.MarketDepthSubscribeResponse>;
  marketDepthUpdatesSubscribe: grpc.handleServerStreamingCall<api_trading_pb.MarketDepthUpdatesSubscribeRequest, api_trading_pb.MarketDepthUpdatesSubscribeResponse>;
  marketsDataSubscribe: grpc.handleServerStreamingCall<api_trading_pb.MarketsDataSubscribeRequest, api_trading_pb.MarketsDataSubscribeResponse>;
  ordersSubscribe: grpc.handleServerStreamingCall<api_trading_pb.OrdersSubscribeRequest, api_trading_pb.OrdersSubscribeResponse>;
  positionsSubscribe: grpc.handleServerStreamingCall<api_trading_pb.PositionsSubscribeRequest, api_trading_pb.PositionsSubscribeResponse>;
  tradesSubscribe: grpc.handleServerStreamingCall<api_trading_pb.TradesSubscribeRequest, api_trading_pb.TradesSubscribeResponse>;
  transferResponsesSubscribe: grpc.handleServerStreamingCall<api_trading_pb.TransferResponsesSubscribeRequest, api_trading_pb.TransferResponsesSubscribeResponse>;
  getNodeSignaturesAggregate: grpc.handleUnaryCall<api_trading_pb.GetNodeSignaturesAggregateRequest, api_trading_pb.GetNodeSignaturesAggregateResponse>;
  assetByID: grpc.handleUnaryCall<api_trading_pb.AssetByIDRequest, api_trading_pb.AssetByIDResponse>;
  assets: grpc.handleUnaryCall<api_trading_pb.AssetsRequest, api_trading_pb.AssetsResponse>;
  estimateFee: grpc.handleUnaryCall<api_trading_pb.EstimateFeeRequest, api_trading_pb.EstimateFeeResponse>;
  estimateMargin: grpc.handleUnaryCall<api_trading_pb.EstimateMarginRequest, api_trading_pb.EstimateMarginResponse>;
  eRC20WithdrawalApproval: grpc.handleUnaryCall<api_trading_pb.ERC20WithdrawalApprovalRequest, api_trading_pb.ERC20WithdrawalApprovalResponse>;
  withdrawal: grpc.handleUnaryCall<api_trading_pb.WithdrawalRequest, api_trading_pb.WithdrawalResponse>;
  withdrawals: grpc.handleUnaryCall<api_trading_pb.WithdrawalsRequest, api_trading_pb.WithdrawalsResponse>;
  deposit: grpc.handleUnaryCall<api_trading_pb.DepositRequest, api_trading_pb.DepositResponse>;
  deposits: grpc.handleUnaryCall<api_trading_pb.DepositsRequest, api_trading_pb.DepositsResponse>;
  networkParameters: grpc.handleUnaryCall<api_trading_pb.NetworkParametersRequest, api_trading_pb.NetworkParametersResponse>;
  liquidityProvisions: grpc.handleUnaryCall<api_trading_pb.LiquidityProvisionsRequest, api_trading_pb.LiquidityProvisionsResponse>;
  oracleSpec: grpc.handleUnaryCall<api_trading_pb.OracleSpecRequest, api_trading_pb.OracleSpecResponse>;
  oracleSpecs: grpc.handleUnaryCall<api_trading_pb.OracleSpecsRequest, api_trading_pb.OracleSpecsResponse>;
  oracleDataBySpec: grpc.handleUnaryCall<api_trading_pb.OracleDataBySpecRequest, api_trading_pb.OracleDataBySpecResponse>;
}

export class TradingDataServiceClient extends grpc.Client {
  constructor(address: string, credentials: grpc.ChannelCredentials, options?: object);
  marketAccounts(argument: api_trading_pb.MarketAccountsRequest, callback: grpc.requestCallback<api_trading_pb.MarketAccountsResponse>): grpc.ClientUnaryCall;
  marketAccounts(argument: api_trading_pb.MarketAccountsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketAccountsResponse>): grpc.ClientUnaryCall;
  marketAccounts(argument: api_trading_pb.MarketAccountsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketAccountsResponse>): grpc.ClientUnaryCall;
  partyAccounts(argument: api_trading_pb.PartyAccountsRequest, callback: grpc.requestCallback<api_trading_pb.PartyAccountsResponse>): grpc.ClientUnaryCall;
  partyAccounts(argument: api_trading_pb.PartyAccountsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PartyAccountsResponse>): grpc.ClientUnaryCall;
  partyAccounts(argument: api_trading_pb.PartyAccountsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PartyAccountsResponse>): grpc.ClientUnaryCall;
  feeInfrastructureAccounts(argument: api_trading_pb.FeeInfrastructureAccountsRequest, callback: grpc.requestCallback<api_trading_pb.FeeInfrastructureAccountsResponse>): grpc.ClientUnaryCall;
  feeInfrastructureAccounts(argument: api_trading_pb.FeeInfrastructureAccountsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.FeeInfrastructureAccountsResponse>): grpc.ClientUnaryCall;
  feeInfrastructureAccounts(argument: api_trading_pb.FeeInfrastructureAccountsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.FeeInfrastructureAccountsResponse>): grpc.ClientUnaryCall;
  candles(argument: api_trading_pb.CandlesRequest, callback: grpc.requestCallback<api_trading_pb.CandlesResponse>): grpc.ClientUnaryCall;
  candles(argument: api_trading_pb.CandlesRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.CandlesResponse>): grpc.ClientUnaryCall;
  candles(argument: api_trading_pb.CandlesRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.CandlesResponse>): grpc.ClientUnaryCall;
  marketDataByID(argument: api_trading_pb.MarketDataByIDRequest, callback: grpc.requestCallback<api_trading_pb.MarketDataByIDResponse>): grpc.ClientUnaryCall;
  marketDataByID(argument: api_trading_pb.MarketDataByIDRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketDataByIDResponse>): grpc.ClientUnaryCall;
  marketDataByID(argument: api_trading_pb.MarketDataByIDRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketDataByIDResponse>): grpc.ClientUnaryCall;
  marketsData(argument: api_trading_pb.MarketsDataRequest, callback: grpc.requestCallback<api_trading_pb.MarketsDataResponse>): grpc.ClientUnaryCall;
  marketsData(argument: api_trading_pb.MarketsDataRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketsDataResponse>): grpc.ClientUnaryCall;
  marketsData(argument: api_trading_pb.MarketsDataRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketsDataResponse>): grpc.ClientUnaryCall;
  marketByID(argument: api_trading_pb.MarketByIDRequest, callback: grpc.requestCallback<api_trading_pb.MarketByIDResponse>): grpc.ClientUnaryCall;
  marketByID(argument: api_trading_pb.MarketByIDRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketByIDResponse>): grpc.ClientUnaryCall;
  marketByID(argument: api_trading_pb.MarketByIDRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketByIDResponse>): grpc.ClientUnaryCall;
  marketDepth(argument: api_trading_pb.MarketDepthRequest, callback: grpc.requestCallback<api_trading_pb.MarketDepthResponse>): grpc.ClientUnaryCall;
  marketDepth(argument: api_trading_pb.MarketDepthRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketDepthResponse>): grpc.ClientUnaryCall;
  marketDepth(argument: api_trading_pb.MarketDepthRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketDepthResponse>): grpc.ClientUnaryCall;
  markets(argument: api_trading_pb.MarketsRequest, callback: grpc.requestCallback<api_trading_pb.MarketsResponse>): grpc.ClientUnaryCall;
  markets(argument: api_trading_pb.MarketsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketsResponse>): grpc.ClientUnaryCall;
  markets(argument: api_trading_pb.MarketsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarketsResponse>): grpc.ClientUnaryCall;
  orderByMarketAndID(argument: api_trading_pb.OrderByMarketAndIDRequest, callback: grpc.requestCallback<api_trading_pb.OrderByMarketAndIDResponse>): grpc.ClientUnaryCall;
  orderByMarketAndID(argument: api_trading_pb.OrderByMarketAndIDRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrderByMarketAndIDResponse>): grpc.ClientUnaryCall;
  orderByMarketAndID(argument: api_trading_pb.OrderByMarketAndIDRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrderByMarketAndIDResponse>): grpc.ClientUnaryCall;
  orderByReference(argument: api_trading_pb.OrderByReferenceRequest, callback: grpc.requestCallback<api_trading_pb.OrderByReferenceResponse>): grpc.ClientUnaryCall;
  orderByReference(argument: api_trading_pb.OrderByReferenceRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrderByReferenceResponse>): grpc.ClientUnaryCall;
  orderByReference(argument: api_trading_pb.OrderByReferenceRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrderByReferenceResponse>): grpc.ClientUnaryCall;
  ordersByMarket(argument: api_trading_pb.OrdersByMarketRequest, callback: grpc.requestCallback<api_trading_pb.OrdersByMarketResponse>): grpc.ClientUnaryCall;
  ordersByMarket(argument: api_trading_pb.OrdersByMarketRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrdersByMarketResponse>): grpc.ClientUnaryCall;
  ordersByMarket(argument: api_trading_pb.OrdersByMarketRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrdersByMarketResponse>): grpc.ClientUnaryCall;
  ordersByParty(argument: api_trading_pb.OrdersByPartyRequest, callback: grpc.requestCallback<api_trading_pb.OrdersByPartyResponse>): grpc.ClientUnaryCall;
  ordersByParty(argument: api_trading_pb.OrdersByPartyRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrdersByPartyResponse>): grpc.ClientUnaryCall;
  ordersByParty(argument: api_trading_pb.OrdersByPartyRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrdersByPartyResponse>): grpc.ClientUnaryCall;
  orderByID(argument: api_trading_pb.OrderByIDRequest, callback: grpc.requestCallback<api_trading_pb.OrderByIDResponse>): grpc.ClientUnaryCall;
  orderByID(argument: api_trading_pb.OrderByIDRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrderByIDResponse>): grpc.ClientUnaryCall;
  orderByID(argument: api_trading_pb.OrderByIDRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrderByIDResponse>): grpc.ClientUnaryCall;
  orderVersionsByID(argument: api_trading_pb.OrderVersionsByIDRequest, callback: grpc.requestCallback<api_trading_pb.OrderVersionsByIDResponse>): grpc.ClientUnaryCall;
  orderVersionsByID(argument: api_trading_pb.OrderVersionsByIDRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrderVersionsByIDResponse>): grpc.ClientUnaryCall;
  orderVersionsByID(argument: api_trading_pb.OrderVersionsByIDRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OrderVersionsByIDResponse>): grpc.ClientUnaryCall;
  marginLevels(argument: api_trading_pb.MarginLevelsRequest, callback: grpc.requestCallback<api_trading_pb.MarginLevelsResponse>): grpc.ClientUnaryCall;
  marginLevels(argument: api_trading_pb.MarginLevelsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarginLevelsResponse>): grpc.ClientUnaryCall;
  marginLevels(argument: api_trading_pb.MarginLevelsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.MarginLevelsResponse>): grpc.ClientUnaryCall;
  parties(argument: api_trading_pb.PartiesRequest, callback: grpc.requestCallback<api_trading_pb.PartiesResponse>): grpc.ClientUnaryCall;
  parties(argument: api_trading_pb.PartiesRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PartiesResponse>): grpc.ClientUnaryCall;
  parties(argument: api_trading_pb.PartiesRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PartiesResponse>): grpc.ClientUnaryCall;
  partyByID(argument: api_trading_pb.PartyByIDRequest, callback: grpc.requestCallback<api_trading_pb.PartyByIDResponse>): grpc.ClientUnaryCall;
  partyByID(argument: api_trading_pb.PartyByIDRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PartyByIDResponse>): grpc.ClientUnaryCall;
  partyByID(argument: api_trading_pb.PartyByIDRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PartyByIDResponse>): grpc.ClientUnaryCall;
  positionsByParty(argument: api_trading_pb.PositionsByPartyRequest, callback: grpc.requestCallback<api_trading_pb.PositionsByPartyResponse>): grpc.ClientUnaryCall;
  positionsByParty(argument: api_trading_pb.PositionsByPartyRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PositionsByPartyResponse>): grpc.ClientUnaryCall;
  positionsByParty(argument: api_trading_pb.PositionsByPartyRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.PositionsByPartyResponse>): grpc.ClientUnaryCall;
  lastTrade(argument: api_trading_pb.LastTradeRequest, callback: grpc.requestCallback<api_trading_pb.LastTradeResponse>): grpc.ClientUnaryCall;
  lastTrade(argument: api_trading_pb.LastTradeRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.LastTradeResponse>): grpc.ClientUnaryCall;
  lastTrade(argument: api_trading_pb.LastTradeRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.LastTradeResponse>): grpc.ClientUnaryCall;
  tradesByMarket(argument: api_trading_pb.TradesByMarketRequest, callback: grpc.requestCallback<api_trading_pb.TradesByMarketResponse>): grpc.ClientUnaryCall;
  tradesByMarket(argument: api_trading_pb.TradesByMarketRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.TradesByMarketResponse>): grpc.ClientUnaryCall;
  tradesByMarket(argument: api_trading_pb.TradesByMarketRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.TradesByMarketResponse>): grpc.ClientUnaryCall;
  tradesByOrder(argument: api_trading_pb.TradesByOrderRequest, callback: grpc.requestCallback<api_trading_pb.TradesByOrderResponse>): grpc.ClientUnaryCall;
  tradesByOrder(argument: api_trading_pb.TradesByOrderRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.TradesByOrderResponse>): grpc.ClientUnaryCall;
  tradesByOrder(argument: api_trading_pb.TradesByOrderRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.TradesByOrderResponse>): grpc.ClientUnaryCall;
  tradesByParty(argument: api_trading_pb.TradesByPartyRequest, callback: grpc.requestCallback<api_trading_pb.TradesByPartyResponse>): grpc.ClientUnaryCall;
  tradesByParty(argument: api_trading_pb.TradesByPartyRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.TradesByPartyResponse>): grpc.ClientUnaryCall;
  tradesByParty(argument: api_trading_pb.TradesByPartyRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.TradesByPartyResponse>): grpc.ClientUnaryCall;
  getProposals(argument: api_trading_pb.GetProposalsRequest, callback: grpc.requestCallback<api_trading_pb.GetProposalsResponse>): grpc.ClientUnaryCall;
  getProposals(argument: api_trading_pb.GetProposalsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetProposalsResponse>): grpc.ClientUnaryCall;
  getProposals(argument: api_trading_pb.GetProposalsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetProposalsResponse>): grpc.ClientUnaryCall;
  getProposalsByParty(argument: api_trading_pb.GetProposalsByPartyRequest, callback: grpc.requestCallback<api_trading_pb.GetProposalsByPartyResponse>): grpc.ClientUnaryCall;
  getProposalsByParty(argument: api_trading_pb.GetProposalsByPartyRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetProposalsByPartyResponse>): grpc.ClientUnaryCall;
  getProposalsByParty(argument: api_trading_pb.GetProposalsByPartyRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetProposalsByPartyResponse>): grpc.ClientUnaryCall;
  getVotesByParty(argument: api_trading_pb.GetVotesByPartyRequest, callback: grpc.requestCallback<api_trading_pb.GetVotesByPartyResponse>): grpc.ClientUnaryCall;
  getVotesByParty(argument: api_trading_pb.GetVotesByPartyRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetVotesByPartyResponse>): grpc.ClientUnaryCall;
  getVotesByParty(argument: api_trading_pb.GetVotesByPartyRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetVotesByPartyResponse>): grpc.ClientUnaryCall;
  getNewMarketProposals(argument: api_trading_pb.GetNewMarketProposalsRequest, callback: grpc.requestCallback<api_trading_pb.GetNewMarketProposalsResponse>): grpc.ClientUnaryCall;
  getNewMarketProposals(argument: api_trading_pb.GetNewMarketProposalsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetNewMarketProposalsResponse>): grpc.ClientUnaryCall;
  getNewMarketProposals(argument: api_trading_pb.GetNewMarketProposalsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetNewMarketProposalsResponse>): grpc.ClientUnaryCall;
  getUpdateMarketProposals(argument: api_trading_pb.GetUpdateMarketProposalsRequest, callback: grpc.requestCallback<api_trading_pb.GetUpdateMarketProposalsResponse>): grpc.ClientUnaryCall;
  getUpdateMarketProposals(argument: api_trading_pb.GetUpdateMarketProposalsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetUpdateMarketProposalsResponse>): grpc.ClientUnaryCall;
  getUpdateMarketProposals(argument: api_trading_pb.GetUpdateMarketProposalsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetUpdateMarketProposalsResponse>): grpc.ClientUnaryCall;
  getNetworkParametersProposals(argument: api_trading_pb.GetNetworkParametersProposalsRequest, callback: grpc.requestCallback<api_trading_pb.GetNetworkParametersProposalsResponse>): grpc.ClientUnaryCall;
  getNetworkParametersProposals(argument: api_trading_pb.GetNetworkParametersProposalsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetNetworkParametersProposalsResponse>): grpc.ClientUnaryCall;
  getNetworkParametersProposals(argument: api_trading_pb.GetNetworkParametersProposalsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetNetworkParametersProposalsResponse>): grpc.ClientUnaryCall;
  getNewAssetProposals(argument: api_trading_pb.GetNewAssetProposalsRequest, callback: grpc.requestCallback<api_trading_pb.GetNewAssetProposalsResponse>): grpc.ClientUnaryCall;
  getNewAssetProposals(argument: api_trading_pb.GetNewAssetProposalsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetNewAssetProposalsResponse>): grpc.ClientUnaryCall;
  getNewAssetProposals(argument: api_trading_pb.GetNewAssetProposalsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetNewAssetProposalsResponse>): grpc.ClientUnaryCall;
  getProposalByID(argument: api_trading_pb.GetProposalByIDRequest, callback: grpc.requestCallback<api_trading_pb.GetProposalByIDResponse>): grpc.ClientUnaryCall;
  getProposalByID(argument: api_trading_pb.GetProposalByIDRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetProposalByIDResponse>): grpc.ClientUnaryCall;
  getProposalByID(argument: api_trading_pb.GetProposalByIDRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetProposalByIDResponse>): grpc.ClientUnaryCall;
  getProposalByReference(argument: api_trading_pb.GetProposalByReferenceRequest, callback: grpc.requestCallback<api_trading_pb.GetProposalByReferenceResponse>): grpc.ClientUnaryCall;
  getProposalByReference(argument: api_trading_pb.GetProposalByReferenceRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetProposalByReferenceResponse>): grpc.ClientUnaryCall;
  getProposalByReference(argument: api_trading_pb.GetProposalByReferenceRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetProposalByReferenceResponse>): grpc.ClientUnaryCall;
  observeGovernance(argument: api_trading_pb.ObserveGovernanceRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.ObserveGovernanceResponse>;
  observeGovernance(argument: api_trading_pb.ObserveGovernanceRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.ObserveGovernanceResponse>;
  observePartyProposals(argument: api_trading_pb.ObservePartyProposalsRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.ObservePartyProposalsResponse>;
  observePartyProposals(argument: api_trading_pb.ObservePartyProposalsRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.ObservePartyProposalsResponse>;
  observePartyVotes(argument: api_trading_pb.ObservePartyVotesRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.ObservePartyVotesResponse>;
  observePartyVotes(argument: api_trading_pb.ObservePartyVotesRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.ObservePartyVotesResponse>;
  observeProposalVotes(argument: api_trading_pb.ObserveProposalVotesRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.ObserveProposalVotesResponse>;
  observeProposalVotes(argument: api_trading_pb.ObserveProposalVotesRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.ObserveProposalVotesResponse>;
  observeEventBus(metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientDuplexStream<api_trading_pb.ObserveEventBusRequest, api_trading_pb.ObserveEventBusResponse>;
  observeEventBus(metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientDuplexStream<api_trading_pb.ObserveEventBusRequest, api_trading_pb.ObserveEventBusResponse>;
  statistics(argument: api_trading_pb.StatisticsRequest, callback: grpc.requestCallback<api_trading_pb.StatisticsResponse>): grpc.ClientUnaryCall;
  statistics(argument: api_trading_pb.StatisticsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.StatisticsResponse>): grpc.ClientUnaryCall;
  statistics(argument: api_trading_pb.StatisticsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.StatisticsResponse>): grpc.ClientUnaryCall;
  getVegaTime(argument: api_trading_pb.GetVegaTimeRequest, callback: grpc.requestCallback<api_trading_pb.GetVegaTimeResponse>): grpc.ClientUnaryCall;
  getVegaTime(argument: api_trading_pb.GetVegaTimeRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetVegaTimeResponse>): grpc.ClientUnaryCall;
  getVegaTime(argument: api_trading_pb.GetVegaTimeRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetVegaTimeResponse>): grpc.ClientUnaryCall;
  accountsSubscribe(argument: api_trading_pb.AccountsSubscribeRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.AccountsSubscribeResponse>;
  accountsSubscribe(argument: api_trading_pb.AccountsSubscribeRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.AccountsSubscribeResponse>;
  candlesSubscribe(argument: api_trading_pb.CandlesSubscribeRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.CandlesSubscribeResponse>;
  candlesSubscribe(argument: api_trading_pb.CandlesSubscribeRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.CandlesSubscribeResponse>;
  marginLevelsSubscribe(argument: api_trading_pb.MarginLevelsSubscribeRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.MarginLevelsSubscribeResponse>;
  marginLevelsSubscribe(argument: api_trading_pb.MarginLevelsSubscribeRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.MarginLevelsSubscribeResponse>;
  marketDepthSubscribe(argument: api_trading_pb.MarketDepthSubscribeRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.MarketDepthSubscribeResponse>;
  marketDepthSubscribe(argument: api_trading_pb.MarketDepthSubscribeRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.MarketDepthSubscribeResponse>;
  marketDepthUpdatesSubscribe(argument: api_trading_pb.MarketDepthUpdatesSubscribeRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.MarketDepthUpdatesSubscribeResponse>;
  marketDepthUpdatesSubscribe(argument: api_trading_pb.MarketDepthUpdatesSubscribeRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.MarketDepthUpdatesSubscribeResponse>;
  marketsDataSubscribe(argument: api_trading_pb.MarketsDataSubscribeRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.MarketsDataSubscribeResponse>;
  marketsDataSubscribe(argument: api_trading_pb.MarketsDataSubscribeRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.MarketsDataSubscribeResponse>;
  ordersSubscribe(argument: api_trading_pb.OrdersSubscribeRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.OrdersSubscribeResponse>;
  ordersSubscribe(argument: api_trading_pb.OrdersSubscribeRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.OrdersSubscribeResponse>;
  positionsSubscribe(argument: api_trading_pb.PositionsSubscribeRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.PositionsSubscribeResponse>;
  positionsSubscribe(argument: api_trading_pb.PositionsSubscribeRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.PositionsSubscribeResponse>;
  tradesSubscribe(argument: api_trading_pb.TradesSubscribeRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.TradesSubscribeResponse>;
  tradesSubscribe(argument: api_trading_pb.TradesSubscribeRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.TradesSubscribeResponse>;
  transferResponsesSubscribe(argument: api_trading_pb.TransferResponsesSubscribeRequest, metadataOrOptions?: grpc.Metadata | grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.TransferResponsesSubscribeResponse>;
  transferResponsesSubscribe(argument: api_trading_pb.TransferResponsesSubscribeRequest, metadata?: grpc.Metadata | null, options?: grpc.CallOptions | null): grpc.ClientReadableStream<api_trading_pb.TransferResponsesSubscribeResponse>;
  getNodeSignaturesAggregate(argument: api_trading_pb.GetNodeSignaturesAggregateRequest, callback: grpc.requestCallback<api_trading_pb.GetNodeSignaturesAggregateResponse>): grpc.ClientUnaryCall;
  getNodeSignaturesAggregate(argument: api_trading_pb.GetNodeSignaturesAggregateRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetNodeSignaturesAggregateResponse>): grpc.ClientUnaryCall;
  getNodeSignaturesAggregate(argument: api_trading_pb.GetNodeSignaturesAggregateRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.GetNodeSignaturesAggregateResponse>): grpc.ClientUnaryCall;
  assetByID(argument: api_trading_pb.AssetByIDRequest, callback: grpc.requestCallback<api_trading_pb.AssetByIDResponse>): grpc.ClientUnaryCall;
  assetByID(argument: api_trading_pb.AssetByIDRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.AssetByIDResponse>): grpc.ClientUnaryCall;
  assetByID(argument: api_trading_pb.AssetByIDRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.AssetByIDResponse>): grpc.ClientUnaryCall;
  assets(argument: api_trading_pb.AssetsRequest, callback: grpc.requestCallback<api_trading_pb.AssetsResponse>): grpc.ClientUnaryCall;
  assets(argument: api_trading_pb.AssetsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.AssetsResponse>): grpc.ClientUnaryCall;
  assets(argument: api_trading_pb.AssetsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.AssetsResponse>): grpc.ClientUnaryCall;
  estimateFee(argument: api_trading_pb.EstimateFeeRequest, callback: grpc.requestCallback<api_trading_pb.EstimateFeeResponse>): grpc.ClientUnaryCall;
  estimateFee(argument: api_trading_pb.EstimateFeeRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.EstimateFeeResponse>): grpc.ClientUnaryCall;
  estimateFee(argument: api_trading_pb.EstimateFeeRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.EstimateFeeResponse>): grpc.ClientUnaryCall;
  estimateMargin(argument: api_trading_pb.EstimateMarginRequest, callback: grpc.requestCallback<api_trading_pb.EstimateMarginResponse>): grpc.ClientUnaryCall;
  estimateMargin(argument: api_trading_pb.EstimateMarginRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.EstimateMarginResponse>): grpc.ClientUnaryCall;
  estimateMargin(argument: api_trading_pb.EstimateMarginRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.EstimateMarginResponse>): grpc.ClientUnaryCall;
  eRC20WithdrawalApproval(argument: api_trading_pb.ERC20WithdrawalApprovalRequest, callback: grpc.requestCallback<api_trading_pb.ERC20WithdrawalApprovalResponse>): grpc.ClientUnaryCall;
  eRC20WithdrawalApproval(argument: api_trading_pb.ERC20WithdrawalApprovalRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.ERC20WithdrawalApprovalResponse>): grpc.ClientUnaryCall;
  eRC20WithdrawalApproval(argument: api_trading_pb.ERC20WithdrawalApprovalRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.ERC20WithdrawalApprovalResponse>): grpc.ClientUnaryCall;
  withdrawal(argument: api_trading_pb.WithdrawalRequest, callback: grpc.requestCallback<api_trading_pb.WithdrawalResponse>): grpc.ClientUnaryCall;
  withdrawal(argument: api_trading_pb.WithdrawalRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.WithdrawalResponse>): grpc.ClientUnaryCall;
  withdrawal(argument: api_trading_pb.WithdrawalRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.WithdrawalResponse>): grpc.ClientUnaryCall;
  withdrawals(argument: api_trading_pb.WithdrawalsRequest, callback: grpc.requestCallback<api_trading_pb.WithdrawalsResponse>): grpc.ClientUnaryCall;
  withdrawals(argument: api_trading_pb.WithdrawalsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.WithdrawalsResponse>): grpc.ClientUnaryCall;
  withdrawals(argument: api_trading_pb.WithdrawalsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.WithdrawalsResponse>): grpc.ClientUnaryCall;
  deposit(argument: api_trading_pb.DepositRequest, callback: grpc.requestCallback<api_trading_pb.DepositResponse>): grpc.ClientUnaryCall;
  deposit(argument: api_trading_pb.DepositRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.DepositResponse>): grpc.ClientUnaryCall;
  deposit(argument: api_trading_pb.DepositRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.DepositResponse>): grpc.ClientUnaryCall;
  deposits(argument: api_trading_pb.DepositsRequest, callback: grpc.requestCallback<api_trading_pb.DepositsResponse>): grpc.ClientUnaryCall;
  deposits(argument: api_trading_pb.DepositsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.DepositsResponse>): grpc.ClientUnaryCall;
  deposits(argument: api_trading_pb.DepositsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.DepositsResponse>): grpc.ClientUnaryCall;
  networkParameters(argument: api_trading_pb.NetworkParametersRequest, callback: grpc.requestCallback<api_trading_pb.NetworkParametersResponse>): grpc.ClientUnaryCall;
  networkParameters(argument: api_trading_pb.NetworkParametersRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.NetworkParametersResponse>): grpc.ClientUnaryCall;
  networkParameters(argument: api_trading_pb.NetworkParametersRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.NetworkParametersResponse>): grpc.ClientUnaryCall;
  liquidityProvisions(argument: api_trading_pb.LiquidityProvisionsRequest, callback: grpc.requestCallback<api_trading_pb.LiquidityProvisionsResponse>): grpc.ClientUnaryCall;
  liquidityProvisions(argument: api_trading_pb.LiquidityProvisionsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.LiquidityProvisionsResponse>): grpc.ClientUnaryCall;
  liquidityProvisions(argument: api_trading_pb.LiquidityProvisionsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.LiquidityProvisionsResponse>): grpc.ClientUnaryCall;
  oracleSpec(argument: api_trading_pb.OracleSpecRequest, callback: grpc.requestCallback<api_trading_pb.OracleSpecResponse>): grpc.ClientUnaryCall;
  oracleSpec(argument: api_trading_pb.OracleSpecRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OracleSpecResponse>): grpc.ClientUnaryCall;
  oracleSpec(argument: api_trading_pb.OracleSpecRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OracleSpecResponse>): grpc.ClientUnaryCall;
  oracleSpecs(argument: api_trading_pb.OracleSpecsRequest, callback: grpc.requestCallback<api_trading_pb.OracleSpecsResponse>): grpc.ClientUnaryCall;
  oracleSpecs(argument: api_trading_pb.OracleSpecsRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OracleSpecsResponse>): grpc.ClientUnaryCall;
  oracleSpecs(argument: api_trading_pb.OracleSpecsRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OracleSpecsResponse>): grpc.ClientUnaryCall;
  oracleDataBySpec(argument: api_trading_pb.OracleDataBySpecRequest, callback: grpc.requestCallback<api_trading_pb.OracleDataBySpecResponse>): grpc.ClientUnaryCall;
  oracleDataBySpec(argument: api_trading_pb.OracleDataBySpecRequest, metadataOrOptions: grpc.Metadata | grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OracleDataBySpecResponse>): grpc.ClientUnaryCall;
  oracleDataBySpec(argument: api_trading_pb.OracleDataBySpecRequest, metadata: grpc.Metadata | null, options: grpc.CallOptions | null, callback: grpc.requestCallback<api_trading_pb.OracleDataBySpecResponse>): grpc.ClientUnaryCall;
}
