syntax = "proto3";

package vega;
option java_package = "io.vegaprotocol.vega";
option go_package = "code.vegaprotocol.io/vega/proto";

// The Vega representation of an external asset
message Asset {
  // Internal identifier of the asset
  string id = 1;
  // Name of the asset (e.g: Great British Pound)
  string name = 2;
  // Symbol of the asset (e.g: GBP)
  string symbol = 3;
  // Total circulating supply for the asset
  string total_supply = 4;
  // Number of decimals / precision handled by this asset
  uint64 decimals = 5;
  // The definition of the external source for this asset
  AssetSource source = 7;
}

// Asset source definition
message AssetSource {
  // The source
  oneof source {
    // A built-in asset
    BuiltinAsset builtin_asset = 1;
    // An Ethereum ERC20 asset
    ERC20 erc20 = 2;
  }
}

// A Vega internal asset
message BuiltinAsset {
  // Name of the asset (e.g: Great British Pound)
  string name = 1;
  // Symbol of the asset (e.g: GBP)
  string symbol = 2;
  // Total circulating supply for the asset
  string total_supply = 3;
  // Number of decimal / precision handled by this asset
  uint64 decimals = 4;
  // Maximum amount that can be requested by a party through the built-in asset faucet at a time
  string max_faucet_amount_mint = 5;
}

// An ERC20 token based asset, living on the ethereum network
message ERC20 {
  // The address of the contract for the token, on the ethereum network
  string contract_address = 1;
}
